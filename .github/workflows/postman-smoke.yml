name: Postman - Smoke (PR & Branch Push)

on:
  pull_request:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm i -g newman

      - name: Create environment from template
        run: |
          cp postman/environments/dev.postman_environment.json.example dev.env.json
          node -e "
            const fs=require('fs');
            const p='dev.env.json';
            const env=JSON.parse(fs.readFileSync(p,'utf8'));
            const map={
              API_BASE_URL: process.env.API_BASE_URL,
              Token: process.env.Token,
              Inst_Num: process.env.Inst_Num,
              Application_Num: process.env.Application_Num,
              TIMEOUT_MS: (process.env.TIMEOUT_MS||'60000').toString()
            };
            env.values.forEach(v=>{ if(map[v.key]!==undefined){ v.value = map[v.key]; }});
            fs.writeFileSync(p, JSON.stringify(env,null,2));
          "
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          Token: ${{ secrets.Token }}
          Inst_Num: ${{ secrets.Inst_Num }}
          Application_Num: ${{ secrets.Application_Num }}
          TIMEOUT_MS: 60000

      - name: Patch collections to use TIMEOUT_MS for response-time asserts
        run: |
          node -e "
            const fs=require('fs');
            const targets=[
              'postman/collections/API_Showcase_Extended.postman_collection.json',
              'postman/collections/API_Showcase_Base.postman_collection.json'
            ];
            for (const p of targets) {
              if (!fs.existsSync(p)) continue;
              let s=fs.readFileSync(p,'utf8');
              // Replace ANY pm.expect(pm.response.responseTime).below(NUM)
              s=s.replace(
                /pm\\.expect\\(\\s*pm\\.response\\.responseTime\\s*\\)\\.below\\(\\s*\\d+\\s*\\)/g,
                \"pm.expect(pm.response.responseTime).below(parseInt(pm.environment.get('TIMEOUT_MS')||'5000'))\"
              );
              fs.writeFileSync(p,s);
            }
          "

      - name: Run Newman (SMOKE)
        run: |
          newman run postman/collections/API_Showcase_Extended.postman_collection.json \
            -e dev.env.json \
            --reporters cli,junit \
            --reporter-junit-export newman-smoke.xml

      - name: Upload JUnit report
        uses: actions/upload-artifact@v4
        with:
          name: newman-smoke-report
          path: newman-smoke.xml
